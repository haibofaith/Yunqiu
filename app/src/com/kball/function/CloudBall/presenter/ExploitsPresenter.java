package com.kball.function.CloudBall.presenter;

import android.content.Context;

import com.google.gson.Gson;
import com.google.gson.JsonObject;
import com.google.gson.reflect.TypeToken;
import com.kball.function.CloudBall.bean.ExploitsListBean;
import com.kball.function.CloudBall.bean.ExploitsListRecordBean;
import com.kball.function.CloudBall.bean.ExploitsListRecordChildBean;
import com.kball.function.CloudBall.view.ExploitsImpl;
import com.kball.function.Login.bean.BaseBean;
import com.kball.net.NI;
import com.kball.net.NetRequest;
import com.kball.net.RequestHandler;
import com.kball.util.ToastAlone;

import java.lang.reflect.Type;

/**
 * Created by user on 2017/3/9.
 */

public class ExploitsPresenter {
    private ExploitsImpl exploits;
    private Context context;
    public ExploitsPresenter(ExploitsImpl exploits) {
        this.exploits = exploits;
    }

    public void teamRecord(Context context,String pageNum,String pageSize,String team_id){
        this.context = context;
        NetRequest.getInstance().get(context, NI.teamRecord(pageNum, pageSize, team_id), new RequestHandler() {
            @Override
            public void onStart() {

            }

            @Override
            public void onSuccess(String response) {
                JsonObject jsonObject = new Gson().fromJson(response,
                        JsonObject.class);
                if (1200 == jsonObject.get("error_code").getAsInt()) {
                    BaseBean<ExploitsListBean<ExploitsListRecordBean<ExploitsListRecordChildBean>>> result;
                    Gson gson = new Gson();
                    Type type = new TypeToken<BaseBean<ExploitsListBean<ExploitsListRecordBean<ExploitsListRecordChildBean>>>>() {
                    }.getType();
                    result = gson.fromJson(response.toString(),type);
                    exploits.setTeamRecordData(result);
                } else {
                    ToastAlone.show(jsonObject.get("msg")
                            .getAsString());
                }
            }

            @Override
            public void onFinish() {

            }
        });
    }
}
