package com.kball.function.CloudBall.adapter;

import android.content.Context;
import android.content.Intent;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;

import com.kball.C;
import com.kball.R;
import com.kball.base.KballBaseAdapter;
import com.kball.function.CloudBall.bean.ExploitsListRecordBean;
import com.kball.function.CloudBall.bean.ExploitsListRecordChildBean;
import com.kball.function.Match.bean.MatchGameBean;
import com.kball.function.Match.bean.MatchListBean;
import com.kball.function.Match.ui.MatchProgrammeAct;
import com.nostra13.universalimageloader.core.ImageLoader;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;

/**
 * Created by xiaole.wang on 17/2/18.
 */

public class ExploitsListAdapter extends KballBaseAdapter<ExploitsListRecordBean<ExploitsListRecordChildBean>> {

    public ExploitsListAdapter(Context context, ArrayList<ExploitsListRecordBean<ExploitsListRecordChildBean>> datas) {
        super(context, datas);
        this.mContext = context;
        this.datas = datas;
    }


    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        ExploitsListAdapter.ViewHolder holder = null;
        if (convertView == null) {
            holder = new ExploitsListAdapter.ViewHolder();
            convertView = View.inflate(mContext, R.layout.exploits_list_item, null);
            holder.date_tv = (TextView) convertView.findViewById(R.id.date_tv);
            holder.match_game_list = (LinearLayout) convertView.findViewById(R.id.match_game_list);
            convertView.setTag(holder);
        } else {
            holder = (ExploitsListAdapter.ViewHolder) convertView.getTag();
        }
        if (datas.get(position).getGroup() != null) {
            holder.date_tv.setText(datas.get(position).getGroup());
        }
        holder.match_game_list.removeAllViews();
        for (int i = 0; i < datas.get(position).getChildren().size(); i++) {
            final View view = LayoutInflater.from(this.mContext).inflate(R.layout.exploits_list_item_child, null);
            ImageView left_img = (ImageView) view.findViewById(R.id.left_img);
            ImageView right_img = (ImageView) view.findViewById(R.id.right_img);
            TextView middle_text = (TextView) view.findViewById(R.id.middle_text);
            TextView left_team = (TextView) view.findViewById(R.id.left_team);
            TextView right_team = (TextView) view.findViewById(R.id.right_team);
            TextView xingqi_tv = (TextView) view.findViewById(R.id.xingqi_tv);
            ImageView right_top_img = (ImageView) view.findViewById(R.id.right_top_img);
            TextView middle_text_under = (TextView) view.findViewById(R.id.middle_text_under);
            ImageLoader.getInstance().displayImage(C.SP.IMG_URL + datas.get(position).getChildren().get(i)
                    .getSponsor_badge(), left_img);
            ImageLoader.getInstance().displayImage(C.SP.IMG_URL + datas.get(position).getChildren().get(i)
                    .getRival_badge(), right_img);
            middle_text.setText(datas.get(position).getChildren().get(i).getScore_teamA() + ":" + datas.get(position)
                    .getChildren().get(i).getScore_teamB());
            left_team.setText(datas.get(position).getChildren().get(i).getSponsor_name());
            right_team.setText(datas.get(position).getChildren().get(i).getRival_name());
            SimpleDateFormat format = new SimpleDateFormat("MM-dd");
            Long game_time = Long.parseLong(datas.get(position).getChildren().get(i).getGame_time());
            String game_time_new = format.format(game_time);
            xingqi_tv.setText(game_time_new);
            /**
             * 比赛状态 状态 1：待审核 2：待迎战 3：报名中 4：报名结束 5：正在进行(比赛中) 6：已结束 7：比赛已取消
             * */

            middle_text_under.setVisibility(View.GONE);
            if (null != datas.get(position).getChildren().get(i).getEvent_status()) {
                right_top_img.setVisibility(View.VISIBLE);
                switch (datas.get(position).getChildren().get(i).getEvent_status()) {
                    case "0":
                        break;
                    case "1":
                        right_top_img.setImageResource(R.drawable.ddsh_img);
                        break;
                    case "2":
                        right_top_img.setImageResource(R.drawable.dyz_img);
                        break;
                    case "3":
                        right_top_img.setImageResource(R.drawable.bmz_img);
                        break;
                    case "4":
                        right_top_img.setImageResource(R.drawable.bmjz_img);
                        break;
                    case "5":
                        right_top_img.setImageResource(R.drawable.zzjx_img);
                        break;
                    case "6":
                        right_top_img.setImageResource(R.drawable.yjs_img);
                        break;
                    case "7":
                        right_top_img.setImageResource(R.drawable.yqx_img);
                        break;
                    case "8":
                        break;
                    case "9":
                        break;
                    default:

                        break;
                }
            } else {
                right_top_img.setVisibility(View.GONE);
            }

            final int position_new = position;
            final int i_new = i;
            holder.match_game_list.addView(view);
            view.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {

                    mContext.startActivity(new Intent(mContext, MatchProgrammeAct.class).putExtra("game_id", datas
                            .get(position_new).getChildren().get(i_new).getGame_id()).putExtra("teamA", datas.get
                            (position_new).getChildren().get(i_new).getSponsor_badge()).putExtra("teamB", datas.get
                            (position_new).getChildren().get(i_new).getRival_badge()));
                }
            });
        }

        return convertView;
    }

    public static String getWeekOfDate(Date date) {
        String[] weekOfDays = {"周日", "周一", "周二", "周三", "周四", "周五", "周六"};
        Calendar calendar = Calendar.getInstance();
        if (date != null) {
            calendar.setTime(date);
        }
        int w = calendar.get(Calendar.DAY_OF_WEEK) - 1;
        if (w < 0) {
            w = 0;
        }
        return weekOfDays[w];
    }


    class ViewHolder {
        LinearLayout match_game_list;
        TextView date_tv;
    }

}
